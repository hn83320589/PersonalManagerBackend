name: Dependency Updates & Security

on:
  schedule:
    # Run every Monday at 8:00 AM UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  security-events: write

jobs:
  # =============================================================================
  # Dependency Updates
  # =============================================================================
  update-dependencies:
    name: 📦 Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: 📦 Update NuGet packages
      run: |
        cd code
        # List outdated packages
        dotnet list package --outdated --format json > outdated-packages.json
        
        # Update all packages to latest minor versions
        dotnet add package Microsoft.AspNetCore.Authentication.JwtBearer
        dotnet add package Microsoft.EntityFrameworkCore.Design
        dotnet add package Microsoft.EntityFrameworkCore.Tools
        dotnet add package Pomelo.EntityFrameworkCore.MySql
        dotnet add package Swashbuckle.AspNetCore
        dotnet add package BCrypt.Net-Next
        dotnet add package StackExchange.Redis
        dotnet add package Microsoft.Extensions.Caching.StackExchangeRedis
        dotnet add package AutoMapper
        dotnet add package AutoMapper.Extensions.Microsoft.DependencyInjection
        
        # Restore and build to check compatibility
        dotnet restore
        dotnet build --no-restore
    
    - name: 📊 Generate dependency report
      run: |
        cd code
        dotnet list package --include-transitive --format json > all-packages.json
        echo "# Dependency Update Report" > dependency-report.md
        echo "Generated on: $(date)" >> dependency-report.md
        echo "" >> dependency-report.md
        
        if [ -s outdated-packages.json ]; then
          echo "## Outdated Packages" >> dependency-report.md
          cat outdated-packages.json >> dependency-report.md
        else
          echo "## ✅ All packages are up to date" >> dependency-report.md
        fi
    
    - name: 🔍 Security vulnerability check
      run: |
        cd code
        dotnet list package --vulnerable --include-transitive || true
        dotnet list package --deprecated || true
    
    - name: 📤 Upload dependency report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-report
        path: code/dependency-report.md
    
    - name: 🔀 Create Pull Request
      if: success()
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies"
        title: "🔄 Automated dependency updates"
        body: |
          ## 📦 Dependency Updates
          
          This PR contains automated dependency updates.
          
          ### Changes:
          - Updated NuGet packages to latest compatible versions
          - Verified build compatibility
          - Security vulnerability check completed
          
          ### Security Check:
          ✅ Vulnerability scan completed - see attached report
          
          ### Generated by:
          GitHub Actions - Dependency Update Workflow
          
          ---
          
          Please review the changes and ensure all tests pass before merging.
        branch: automated/dependency-updates
        delete-branch: true

  # =============================================================================
  # Security Auditing
  # =============================================================================
  security-audit:
    name: 🛡️ Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: 🔍 Security audit
      run: |
        cd code
        # Check for known vulnerabilities
        dotnet list package --vulnerable --include-transitive > vulnerability-report.txt
        
        # Check for deprecated packages
        dotnet list package --deprecated > deprecated-report.txt
        
        # Generate security report
        echo "# Security Audit Report" > security-report.md
        echo "Generated on: $(date)" >> security-report.md
        echo "" >> security-report.md
        
        echo "## Vulnerability Check" >> security-report.md
        if [ -s vulnerability-report.txt ]; then
          echo "⚠️ Vulnerabilities found:" >> security-report.md
          cat vulnerability-report.txt >> security-report.md
        else
          echo "✅ No known vulnerabilities found" >> security-report.md
        fi
        
        echo "" >> security-report.md
        echo "## Deprecated Packages" >> security-report.md
        if [ -s deprecated-report.txt ]; then
          echo "⚠️ Deprecated packages found:" >> security-report.md
          cat deprecated-report.txt >> security-report.md
        else
          echo "✅ No deprecated packages found" >> security-report.md
        fi
    
    - name: 📤 Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-report
        path: code/security-report.md
    
    - name: 🚨 Create security issue
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '🚨 Security Vulnerability Detected',
            body: `
            ## Security Alert
            
            The automated security audit has detected potential security issues.
            
            **Workflow Run:** ${context.runId}
            **Commit:** ${context.sha}
            
            Please review the security audit report and take necessary actions.
            
            Generated by: Security Audit Workflow
            `,
            labels: ['security', 'vulnerability', 'high-priority']
          })

  # =============================================================================
  # License Compliance Check
  # =============================================================================
  license-check:
    name: 📜 License Compliance
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: 📜 Check package licenses
      run: |
        cd code
        # Install license checker tool
        dotnet tool install --global dotnet-project-licenses
        
        # Generate license report
        dotnet-project-licenses --input . --output-format json --output licenses.json
        dotnet-project-licenses --input . --output-format markdown --output license-report.md
        
        echo "## License Compliance Report" > full-license-report.md
        echo "Generated on: $(date)" >> full-license-report.md
        echo "" >> full-license-report.md
        cat license-report.md >> full-license-report.md
    
    - name: 📤 Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-compliance-report
        path: |
          code/licenses.json
          code/full-license-report.md